// 按照网站自己的需求，提供公用的样式
@import './variables.less';
* {
    box-sizing: border-box;
  }
  
  html {
    height: 100%;
    font-size: 14px;
  }
  body {
    height: 100%;
    color: #333;
    min-width: 1240px;
    font: 1em/1.4 'Microsoft Yahei', 'PingFang SC', 'Avenir', 'Segoe UI', 'Hiragino Sans GB',
      'STHeiti', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', sans-serif;
  }
  
  ul,
  h1,
  h3,
  h4,
  p,
  dl,
  dd {
    padding: 0;
    margin: 0;
  }
  
  a {
    text-decoration: none;
    color: #333;
    outline: none;
  }
  
  i {
    font-style: normal;
  }
  
  input[type='text'],
  input[type='search'],
  input[type='password'],
  input[type='checkbox'] {
    padding: 0;
    outline: none;
    border: none;
    appearance: none;
    &::placeholder {
      color: #ccc;
    }
  }
  
  img {
    max-width: 100%;
    max-height: 100%;
    vertical-align: middle;
    //  background: #ebebeb;
  }
  
  ul {
    list-style: none;
  }
  
  #app {
    background: #f5f5f5;
    // 不能选中文字
    user-select: none;
  }
  
  .container {
    width: 1240px;
    margin: 0 auto;
    position: relative;
  }
  
  // 一行省略
  .ellipsis {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
  }
  // 二行省略
  .ellipsis-2 {
    word-break: break-all;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    overflow: hidden;
  }
  
  .fl {
    float: left;
  }
  
  .fr {
    float: right;
  }
  
  .clearfix:after {
    content: '.';
    display: block;
    visibility: hidden;
    height: 0;
    line-height: 0;
    clear: both;
  }
  
  // 闪动画
  .shan {
    &::after {
      content: '';
      position: absolute;
      animation: shan 1.5s ease 0s infinite;
      top: 0;
      width: 30%;
      height: 100%;
      background: linear-gradient(
        to left,
        rgba(255, 255, 255, 0) 0,
        rgba(255, 255, 255, 0.3) 50%,
        rgba(255, 255, 255, 0) 100%
      );
      transform: skewX(-45deg);
    }
  }
  @keyframes shan {
    0% {
      left: -100%;
    }
    100% {
      left: 120%;
    }
  }
  
  // 离开淡出动画
  .fade {
    &-leave {
      &-active {
        position: absolute;
        width: 100%;
        transition: opacity 0.5s 0.2s;
        z-index: 1;
      }
      &-to {
        opacity: 0;
      }
    }
  }
  
  // 1. 离开，透明度  1---->0    位移 0---->30
  // 2. 进入，透明度  0---->1    位移 30---->0
  // 执行顺序，先离开再进入
  .pop {
    &-leave {
      &-from {
        opacity: 1;
        transform: none;
      }
      &-active {
        transition: all 0.5s;
      }
      &-to {
        opacity: 0;
        transform: translateX(20px);
      }
    }
    &-enter {
      &-from {
        opacity: 0;
        transform: translateX(20px);
      }
      &-active {
        transition: all 0.5s;
      }
      &-to {
        opacity: 1;
        transform: none;
      }
    }
  }
  
  // 表单
  .xtx-form {
    padding: 50px 0;
    &-item {
      display: flex;
      align-items: center;
      width: 700px;
      margin: 0 auto;
      padding-bottom: 25px;
      .label {
        width: 180px;
        padding-right: 10px;
        text-align: right;
        color: #999;
        ~ .field {
          margin-left: 0;
        }
      }
      .field {
        width: 320px;
        height: 50px;
        position: relative;
        margin-left: 190px;
        .icon {
          position: absolute;
          left: 0;
          top: 0;
          width: 40px;
          height: 50px;
          text-align: center;
          line-height: 50px;
          color: #999;
          ~ .input {
            padding-left: 40px;
          }
        }
        .input {
          border: 1px solid #e4e4e4;
          width: 320px;
          height: 50px;
          line-height: 50px;
          padding: 0 10px;
          &.err {
            border-color: @priceColor;
          }
          &:focus,
          &:active {
            border-color: @xtxColor;
          }
        }
      }
      .error {
        width: 180px;
        padding-left: 10px;
        color: @priceColor;
      }
    }
    .submit {
      width: 320px;
      height: 50px;
      border-radius: 4px;
      background: @xtxColor;
      height: 50px;
      line-height: 50px;
      text-align: center;
      font-size: 16px;
      color: #fff;
      display: block;
      margin: 0 auto;
    }
  }

  //flex 布局元素
  .flex {
    display: flex;
}
.flexJustifySpaceBetween {
    justify-content: space-between;
}
.flexJustifySpaceAround {
    justify-content: space-around;
}
.flexJustifySpaceEvenly {
    justify-content: space-evenly;
}
.flexJustifyCenter {
    justify-content: center;
}
.flexJustifyStart {
    justify-content: flex-start;
}
.flexJustifyEnd {
    justify-content: flex-end;
}
.flexItemsCenter {
    align-items: center;
}
.flexItemsStart {
    align-items: flex-start;
}
.flexItemsEnd {
    align-items: flex-end;
}
.flexItemsStretch {
    align-items: stretch;
}
.flexItemsBaseline {
    align-items: baseline;
}
.flexWrap {
    flex-wrap: wrap;
}
.flexDirectionColumn {
    flex-direction: column;
}
.flexDirectionRowReverse {
    flex-direction: row-reverse;
}
.flexDirectionColumnReverse {
    flex-direction: column-reverse;
}
.flexContentBaseLine {
    align-content: baseline;
}
.flexContentStart {
    align-content: flex-start;
}
.flexContentFlexEnd {
    align-content: flex-end;
}
.flexContentSpaceAround {
    align-content: space-around;
}
.flexContentSpaceBetween {
    align-content: space-between;
}
.flexContentStretch {
    align-content: stretch;
}
//渐变阴影
.gradientShadow {
  // height: 100px;
  // width: 100px;
  position: relative;
  --sx:10px;
  --sy:10px;
  --blur:5px;
  --color:#ffd700,
              #f79d03,
              #ee6907,
              #e6390a,
              #de0d0d,
              #d61309,
              #cf1261,
              #c71585,
              #cf1261,
              #d61039,
              #de0d0d,
              #ee6907,
              #f79d03,
              #ffd700;
  &:after {
      content: '';
      position: absolute;
      left: var(--sx);
      top: var(--sy);
      width: 100%;
      height: 100%;
      filter: blur(var(--blur));
      background: conic-gradient(var(--color));
      clip-path: polygon(-100vmax -100vmax,
              100vmax -100vmax,
              100vmax 100vmax,
              -100vmax 100vmax,
              -100vmax -100vmax,
              calc(0px - var(--sx)) calc(0px - var(--sy)),
              calc(0px - var(--sx)) calc(100% - var(--sy)),
              calc(100% - var(--sx)) calc(100% - var(--sy)),
              calc(100% - var(--sx)) calc(0px - var(--sy)),
              calc(0px - var(--sx)) calc(0px - var(--sy)),);
  }
}